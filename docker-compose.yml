services:
  my-kotlin-app:
    build: ./apps/my-kotlin-app
    image: my-kotlin-app:1.0.0
    ports:
      - 8080:8080
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel:4318  # 关键！使用服务名
    volumes:
      - ~/.m2:/root/.m2
    networks:
      - observability

  prom:
    image: prom/prometheus:v2.46.0
    ports:
      - 9090:9090
    volumes:
      - ./configuration/prometheus.yaml:/prometheus/prometheus.yml:ro
      - ./configuration/alert_rules.yml:/etc/prometheus/alert_rules.yml
    command:
      - --web.enable-remote-write-receiver
    networks:
      - observability
    depends_on:
      - alertmanager

  alertmanager:
    image: prom/alertmanager:latest
    volumes:
      - ./configuration/alertmanager.yml:/etc/alertmanager/alertmanager.yml
      - ./alertmanager-entrypoint.sh:/entrypoint.sh
    entrypoint: [ "/bin/sh", "/entrypoint.sh" ]
    ports:
      - 9093:9093
    # .env file content
    # ALERTMANAGER_TO_EMAIL=xxx
    # ALERTMANAGER_AUTH_USERNAME=xxx
    # ALERTMANAGER_AUTH_PASSWORD=xxx
    env_file:
      - .env
    networks:
      - observability

  loki:
    image: grafana/loki:3.4.2
    ports:
      - 3100:3100
#    volumes:
#      - ./configuration/loki-config.yaml:/etc/loki/local-config.yaml:ro
    networks:
      - observability

  tempo:
    image: grafana/tempo:2.7.2
    ports:
      - 3200:3200  # Tempo Query Port
#      - 4417:4317  # OTLP gRPC
#      - 4418:4318  # OTLP HTTP
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./configuration/tempo.yaml:/etc/tempo.yaml
    networks:
      - observability

  otel:
    image: otel/opentelemetry-collector-contrib:latest
    volumes:
      - ./configuration/otel-config.yaml:/etc/otelcol-contrib/config.yaml
    ports:
      - 54527:54527
      - 4317:4317 # OTLP gRPC receiver
      - 4318:4318 # OTLP http receiver
    depends_on:
      - loki
      - prom
      - my-kotlin-app
    networks:
      - observability

  grafana:
    image: grafana/grafana:latest
    ports:
      - 3000:3000
    volumes:
      - ./configuration/grafana/datasources:/etc/grafana/provisioning/datasources:ro
      - ./configuration/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - grafana-storage:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - loki
      - prom
    networks:
      - observability

networks:
  observability:
    driver: bridge

volumes:
  grafana-storage:
    driver: local
  maven:
    driver: local
  loki-storage:
    driver: local